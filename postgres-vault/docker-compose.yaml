version: '3.5'

services:

  vault:
    image: hashicorp/vault
    command: server -dev
    ports:
      - "9200:8200"
    environment:
      VAULT_DEV_ROOT_TOKEN_ID: 1234
      VAULT_DEV_LISTEN_ADDRESS: 0.0.0.0:8200


  vault-client:
    image: hashicorp/vault
    command: sh /vault/run_vault.sh
    volumes:
      - ./run_vault.sh:/vault/run_vault.sh

    environment:
      VAULT_DEV_ROOT_TOKEN_ID: "1234"
      VAULT_ADDR: "http://vault:8200"
      DBUSER: "postgres"
      DBPASS: "postgres"
      ROLE_ID: "1234"
    depends_on:
      - input_db
      - output_db


  input_db:
    container_name: input_db
    image: postgres:15
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
    volumes:
      - ./create_users.sql:/docker-entrypoint-initdb.d/1.sql
      - ./create_schema.sql:/docker-entrypoint-initdb.d/2.sql
    ports: [ "6000:5432" ]
    healthcheck:
      test: "pg_isready -d postgres -q -U ${POSTGRES_USER:-postgres}"
      interval: "3s"
      timeout: "3s"
      start_period: "3s"
      retries: 30

  output_db:
    container_name: output_db
    image: postgres:15
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
    volumes:
      - ./create_users.sql:/docker-entrypoint-initdb.d/1.sql
    ports: [ "6001:5432" ]
    healthcheck:
      test: "pg_isready -d postgres -q -U ${POSTGRES_USER:-postgres}"
      interval: "3s"
      timeout: "3s"
      start_period: "3s"
      retries: 30
